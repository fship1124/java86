<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mlec.member.dao.MemberMapper">
	<select id="getMemberInfo1" parameterType="string"
	                            resultType="member">
	    select id, name, email, addr 
	      from mybatis_member
	     where id = #{id}    
	</select>
	
	<select id="getMemberInfo2" resultType="member"
	                            parameterType="member">
	    select id, name, email, addr 
	      from mybatis_member
	     where name = #{name}
	       and email = #{email}    
	</select>	
	<select id="getMemberInfo3" parameterType="member"
	                            resultType="string">
	    select id 
	      from mybatis_member
	     where name = #{name}
	       and email = #{email}  			    
	</select>
	<select id="getMemberInfo4" resultType="int">
	    select count(*)
	      from mybatis_member
	</select>
	<select id="getMemberList1" resultType="member">
	    select id, join_date as joinDate
	      from mybatis_member
	</select>
	<resultMap id="memberMap" type="member" >
	    <result column="id" property="id" />
	    <result column="join_date" property="joinDate" />
	</resultMap>
	<select id="getMemberList2" resultMap="memberMap">
	    select id, join_date
	      from mybatis_member
	</select>
	<insert id="insertMember" parameterType="member">
	    insert into mybatis_member (
	    	id, name, addr, email
	    ) values (
	    	#{id}, #{name}, #{addr}, #{email}
	    )
	</insert>
	<update id="updateMember" parameterType="member">
	    update mybatis_member 
	       set email = #{email}
	     where id = #{id}
	</update>
	<delete id="deleteMember" parameterType="string">
	    delete 
	      from mybatis_member
	     where id = #{id} 
	</delete>
	
	<select id="getMemberIteratorList" resultType="member"
	                                   parameterType="member">
	    select *
	      from mybatis_member
<!-- 	     where addr in ('seoul', 'pusan') -->
	     where addr in <foreach item="addr" collection="addrs" 
	                            open="(" close=")" separator=",">
	     					#{addr}
	                   </foreach>
	       and name = #{name}
	</select>
	<!-- 공통의 쿼리를 묶는다. -->
	<sql id="commonMember">
	      from mybatis_member
	     where name like '%' || #{name} || '%'
	       and email like '%' || #{email} || '%'	    
	</sql>
	<select id="getMemberIncludeList" parameterType="member"
	                                  resultType="member">
	    select id, name, email, addr
	      <include refid="commonMember" />
	</select>
	<select id="getMemberIncludeListCount" parameterType="member"
	                                       resultType="int">
	    select count(*)
	      <include refid="commonMember" />
	</select>
	
	<select id="getDynamicMemberList1" parameterType="member"
	                                   resultType="member">
	    select *
	      from mybatis_member
	     <where>
		     <if test="id != null">
		       id like '%' || #{id} || '%' 
		     </if>
		     <if test="name != null">
		       and name like '%' || #{name} || '%' 
		     </if>  
		     <if test="email != null">
		       and email like '%' || #{email} || '%'
		     </if>   
	     </where> 
	     <!-- 
	     where 1 = 1 
	     <if test="id != null">
	       and id like '%' || #{id} || '%' 
	     </if>
	     <if test="name != null">
	       and name like '%' || #{name} || '%' 
	     </if>  
	     <if test="email != null">
	       and email like '%' || #{email} || '%'
	     </if>   
	      -->
	</select>
	
	<select id="getDynamicMemberList2" parameterType="search"
	                                   resultType="member">
	    select *
	      from mybatis_member
	     <where>
	        <choose>
				<when test="searchType == 'id'">
	         		id like '%' || #{searchWord} || '%'
				</when>	         
				<otherwise>
	         		name like '%' || #{searchWord} || '%'
				</otherwise>	         
	        </choose> 
	     </where> 
	</select>
	
	
</mapper>







